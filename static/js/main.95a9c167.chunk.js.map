{"version":3,"sources":["utilities.js","gestureImages/victory.png","gestureImages/yes.png","gestureImages/no.png","gestureImages/question.png","gestureImages/love.png","customGestures/LoveYou.js","customGestures/ThumbsDown.js","customGestures/HandRaise.js","App.js","reportWebVitals.js","index.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","0","color","size","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","loveYouGesture","GestureDescription","addCurl","Finger","Thumb","FingerCurl","NoCurl","addDirection","FingerDirection","HorizontalLeft","HorizontalRight","DiagonalUpLeft","DiagonalUpRight","Index","VerticalUp","Pinky","Middle","Ring","FullCurl","HalfCurl","VerticalDown","thumbsDownGesture","DiagonalDownLeft","DiagonalDownRight","handraiseGesture","App","webcamRef","useRef","canvasRef","useState","emoji","setEmoji","images","thumbs_up","victory","thumbs_down","handRaise","i_love_you","runHandpose","a","handpose","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","GE","fp","VictoryGesture","ThumbsUpGesture","estimate","undefined","gesture","gestures","confidence","map","maxConfidence","indexOf","max","apply","name","getContext","useEffect","className","ref","position","marginLeft","marginRight","left","right","textAlign","zindex","src","bottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95a9c167.chunk.js","sourcesContent":["// Points for fingers\r\nconst fingerJoints = {\r\n    thumb: [0, 1, 2, 3, 4],\r\n    indexFinger: [0, 5, 6, 7, 8],\r\n    middleFinger: [0, 9, 10, 11, 12],\r\n    ringFinger: [0, 13, 14, 15, 16],\r\n    pinky: [0, 17, 18, 19, 20],\r\n  };\r\n  \r\n  // Infinity Gauntlet Style\r\n  const style = {\r\n    0: { color: \"yellow\", size: 15 },\r\n    1: { color: \"gold\", size: 6 },\r\n    2: { color: \"green\", size: 10 },\r\n    3: { color: \"gold\", size: 6 },\r\n    4: { color: \"gold\", size: 6 },\r\n    5: { color: \"purple\", size: 10 },\r\n    6: { color: \"gold\", size: 6 },\r\n    7: { color: \"gold\", size: 6 },\r\n    8: { color: \"gold\", size: 6 },\r\n    9: { color: \"blue\", size: 10 },\r\n    10: { color: \"gold\", size: 6 },\r\n    11: { color: \"gold\", size: 6 },\r\n    12: { color: \"gold\", size: 6 },\r\n    13: { color: \"red\", size: 10 },\r\n    14: { color: \"gold\", size: 6 },\r\n    15: { color: \"gold\", size: 6 },\r\n    16: { color: \"gold\", size: 6 },\r\n    17: { color: \"orange\", size: 10 },\r\n    18: { color: \"gold\", size: 6 },\r\n    19: { color: \"gold\", size: 6 },\r\n    20: { color: \"gold\", size: 6 },\r\n  };\r\n  \r\n  // Drawing function\r\n  export const drawHand = (predictions, ctx) => {\r\n    // Check if we have predictions\r\n    if (predictions.length > 0) {\r\n      // Loop through each prediction\r\n      predictions.forEach((prediction) => {\r\n        // Grab landmarks\r\n        const landmarks = prediction.landmarks;\r\n  \r\n        // Loop through fingers\r\n        for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\r\n          let finger = Object.keys(fingerJoints)[j];\r\n          //  Loop through pairs of joints\r\n          for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\r\n            // Get pairs of joints\r\n            const firstJointIndex = fingerJoints[finger][k];\r\n            const secondJointIndex = fingerJoints[finger][k + 1];\r\n  \r\n            // Draw path\r\n            ctx.beginPath();\r\n            ctx.moveTo(\r\n              landmarks[firstJointIndex][0],\r\n              landmarks[firstJointIndex][1]\r\n            );\r\n            ctx.lineTo(\r\n              landmarks[secondJointIndex][0],\r\n              landmarks[secondJointIndex][1]\r\n            );\r\n            ctx.strokeStyle = \"plum\";\r\n            ctx.lineWidth = 4;\r\n            ctx.stroke();\r\n          }\r\n        }\r\n  \r\n        // Loop through landmarks and draw em\r\n        for (let i = 0; i < landmarks.length; i++) {\r\n          // Get x point\r\n          const x = landmarks[i][0];\r\n          // Get y point\r\n          const y = landmarks[i][1];\r\n          // Start drawing\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\r\n  \r\n          // Set line color\r\n          ctx.fillStyle = style[i][\"color\"];\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n  };","export default __webpack_public_path__ + \"static/media/victory.8710fbb2.png\";","export default __webpack_public_path__ + \"static/media/yes.dd78e159.png\";","export default __webpack_public_path__ + \"static/media/no.4d6a775a.png\";","export default __webpack_public_path__ + \"static/media/question.31efa8e1.png\";","export default __webpack_public_path__ + \"static/media/love.a663e76d.png\";","//Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose';\r\n\r\n//Define Gesture Description\r\n\r\nexport const loveYouGesture = new GestureDescription('i_love_you');\r\n\r\n// Thumb \r\nloveYouGesture.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0)\r\nloveYouGesture.addDirection(Finger.Thumb, FingerDirection.HorizontalLeft, 0.20);\r\nloveYouGesture.addDirection(Finger.Thumb, FingerDirection.HorizontalRight, 0.20);\r\nloveYouGesture.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.20);\r\nloveYouGesture.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 0.20);\r\n\r\n// Index\r\nloveYouGesture.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0)\r\nloveYouGesture.addDirection(Finger.Index, FingerDirection.VerticalUp, 0.25);\r\nloveYouGesture.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 0.20);\r\nloveYouGesture.addDirection(Finger.Index, FingerDirection.DiagonalUpRight, 0.20);\r\n\r\n// Pinky\r\nloveYouGesture.addCurl(Finger.Pinky, FingerCurl.NoCurl, 1.0)\r\nloveYouGesture.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.20);\r\nloveYouGesture.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 0.20);\r\nloveYouGesture.addDirection(Finger.Index, FingerDirection.DiagonalUpRight, 0.20);\r\n\r\nfor(let finger of [Finger.Middle, Finger.Ring]){\r\n    loveYouGesture.addCurl(finger, FingerCurl.FullCurl, .75); \r\n    loveYouGesture.addCurl(finger, FingerCurl.HalfCurl, .75); \r\n    loveYouGesture.addDirection(finger, FingerDirection.VerticalDown, 0.25);\r\n}\r\n","//Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose';\r\n\r\n//Define Gesture Description\r\n\r\nexport const thumbsDownGesture = new GestureDescription('thumbs_down');\r\n\r\n/*\r\n     0: 'Thumb',\r\n      1: 'Index',\r\n      2: 'Middle',\r\n      3: 'Ring',\r\n      4: 'Pinky\r\n */\r\n\r\nthumbsDownGesture.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\nthumbsDownGesture.addDirection(Finger.Thumb, FingerDirection.VerticalDown, 1.0);\r\nthumbsDownGesture.addDirection(Finger.Thumb, FingerDirection.DiagonalDownLeft, 0.5);\r\nthumbsDownGesture.addDirection(Finger.Thumb, FingerDirection.DiagonalDownRight, 0.5);\r\n\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\r\n    thumbsDownGesture.addCurl(finger, FingerCurl.FullCurl, 1.0);\r\n    thumbsDownGesture.addDirection(finger, FingerDirection.HorizontalLeft, 1.0);\r\n    thumbsDownGesture.addDirection(finger, FingerDirection.HorizontalRight, 1.0);\r\n}\r\n","//Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose';\r\n\r\n//Define Gesture Description\r\n\r\nexport const handraiseGesture = new GestureDescription('handRaise');\r\n\r\n/*\r\n     0: 'Thumb',\r\n      1: 'Index',\r\n      2: 'Middle',\r\n      3: 'Ring',\r\n      4: 'Pinky\r\n */\r\n\r\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\r\n    handraiseGesture.addCurl(finger, FingerCurl.NoCurl, 1.0);\r\n    handraiseGesture.addDirection(finger, FingerDirection.VerticalUp, 1.0);\r\n}\r\n","// 1. Install dependencies DONE\n// 2. Import dependencies DONE\n// 3. Setup webcam and canvas DONE\n// 4. Define references to those DONE\n// 5. Load handpose DONE\n// 6. Detect function DONE\n// 7. Drawing utilities DONE\n// 8. Draw functions DONE\n\n// 0. Install fingerpose npm install fingerpose\n// 1. Add Use State\n// 2. Import emojis and finger pose import * as fp from \"fingerpose\";\n// 3. Setup hook and emoji object\n// 4. Update detect function for gesture handling\n// 5. Add emoji display to the screen\n\n///////// NEW STUFF ADDED USE STATE\nimport React, { useRef, useState, useEffect } from \"react\";\n///////// NEW STUFF ADDED USE STATE\n\n// import logo from './logo.svg';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawHand } from \"./utilities\";\n\n///////// NEW STUFF IMPORTS\nimport * as fp from \"fingerpose\";\nimport victory from \"./gestureImages/victory.png\";\nimport thumbs_up from \"./gestureImages/yes.png\";\nimport thumbs_down from \"./gestureImages/no.png\";\nimport handRaise from \"./gestureImages/question.png\";\nimport i_love_you from \"./gestureImages/love.png\";\n///////// NEW STUFF IMPORTS\n\n//IMports for custom gestures\nimport {loveYouGesture} from \"./customGestures/LoveYou\";\nimport {thumbsDownGesture} from \"./customGestures/ThumbsDown\";\nimport {handraiseGesture} from \"./customGestures/HandRaise\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  ///////// NEW STUFF ADDED STATE HOOK\n  const [emoji, setEmoji] = useState(null);\n  const images = { thumbs_up: thumbs_up, victory: victory, thumbs_down: thumbs_down, handRaise: handRaise, i_love_you: i_love_you };\n  ///////// NEW STUFF ADDED STATE HOOK\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const hand = await net.estimateHands(video);\n      // console.log(hand);\n\n      ///////// NEW STUFF ADDED GESTURE HANDLING\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([\n          fp.Gestures.VictoryGesture,\n          fp.Gestures.ThumbsUpGesture,\n          loveYouGesture,\n          thumbsDownGesture,\n          handraiseGesture\n        ]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          console.log(gesture.gestures);\n\n          const confidence = gesture.gestures.map(\n            (prediction) => prediction.confidence\n          );\n          const maxConfidence = confidence.indexOf(\n            Math.max.apply(null, confidence)\n          );\n          // console.log(gesture.gestures[maxConfidence].name);\n          setEmoji(gesture.gestures[maxConfidence].name);\n          console.log(emoji);\n        }\n      }\n\n      ///////// NEW STUFF ADDED GESTURE HANDLING\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  useEffect(()=>{runHandpose()},[]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        {/* NEW STUFF */}\n        {emoji !== null ? (\n          <img\n            src={images[emoji]}\n            style={{\n              position: \"absolute\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              left: 400,\n              bottom: 350,\n              right: 0,\n              textAlign: \"center\",\n              height: 200,\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {/* NEW STUFF */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}